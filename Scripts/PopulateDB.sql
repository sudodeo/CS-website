INSERT INTO courses (code, level, title, description, status, units)
VALUES
 ('CSC 101', '100', 'Introduction to Computer Science', 'Overview of the discipline of Computer Science. General structure of a computer system. Historical Development of computer systems, Generations of Computer system, Use of Computers, basic computer operating systems, Files, Use of basic utilities such as Word Processing, Spreadsheets, Presentation, Browsers, Compression software. Common File Formats: text files, doc, rtf, pdf, ps, web document formats, audio and video files etc., Readers and Format Converters, web development tools. Introduction to the hypertext mark-up language. Laboratory Exercises using applications running on relevant Operating Systems such as Windows, Linux, Mac OS', 'Compulsory', 4),
 ('CSC 102', '100', 'Introduction to Computing', 'The definitions and scope of computer science, General structure of a computer system. Historical Development of computer systems, Generations of Computer system, ,Fields and Interests in computer science, Information representation in a computer, Basic Computer Organization, Instruction sets, Problem Solving using pseudo-codes, Programming Languages, Computer Networks and the Internet, Computers and Society. Introduction to Computer Programming using a suitable programming language.', 'Compulsory', 4),
 ('CSC 103', '100', 'Introduction to Programming', 'Introduction to Programming, Numbers and Strings, Conditionals and Booleans, Functions, documentation, I/O, Graphics, Objects, and Methods, Loops, functional decomposition, Loops, design II, Abstract data types: Lists, dictionaries, sets, stacks, queues, etc. Searching, Algorithm analysis, Recursion, sorting, Recursion, Defining new classes (including libraries). Laboratory exercises in relevant programming language.', 'Compulsory', 4),
 ('CSC 213', '200', 'Digital Logic Design', 'Basic Circuit theory. Kirchhoff''s law. Norton''s theorem. Semiconductors: Diodes, transistors. PLA, Elementary digital circuits: Logic Gates. Gate implementations. TTL, CMOS, ECL, Simple sequential Circuit; register, counter, multiplexer, decoder. Codes: BCD, XS-3. Error Detection and Correction Codes. Gray Codes. Logic Gates. Boolean Algebra. Switching function minimization: Karnaugh Maps, Quine-McCluskey algorithm. Combinational Circuit Design. Flip Flops: SR, JK, D and T. Registers and Counters. Sequential Circuit Design.', 'Compulsory', 4),
 ('CSC 222', '200', 'Digital Communication Systems', 'Overview, Abstractions and Information Compression Errors in communication Error correction (channel codes): Basics Error correction: Linear block codes, Convolutional coding, Viterbi decoding of convolutional codes. Noise, Transmitting on a Physical Channel, Linear Time-Invariant (LTI) systems, LTI Channel and Intersymbol Interference. Convolution, Frequency Response of LTI Systems, Spectral representation of signals, Modulation/Demodulation, Medium Access (MAC): Aloha, MAC: Contention windows, CSMA, TDMA, Packet switching, Network routing(without failures & handling failures), Reliable Data Transport, Sliding Window Protocol, Evolution of Networks.', 'Compulsory', 4),
 ('CSC 231', '200', 'Scientific Programming', 'Introduction to a relevant scientific programming language. Implementation of basic programming constructs in the language. Procedure calls. Recursion. Extensive Laboratory exercises in the Programming language. Introduction to Scientific Computation and practical experience in relevant scientific language like MATLAB or MAPLE.', 'Elective', 3),
 ('CSC 234', '200', 'Assembly Language Programming', 'Review of data and instruction representation modes; Computer instruction set, modes of addressing instructor executor and flow of control. Programming in assembly language e.g. Intel BO86. Pentium family of assembly/ Language interfacing assembly/language programs to high level language program; laboratory exercise', 'Elective', 3),
 ('CSC 235', '200', 'Object Oriented Programming', 'Top down programming versus bottom-up programming. A Summary Structured Programming as a concept. Data encapsulation. Classes, Objects and Inheritance. Polymorphism and Generic Classes. Classes and Objects as components and Program Reuse. Laboratory Exercises in relevant programming language', 'Compulsory', 3),
 ('CSC 236', '200', 'Introduction To Algorithms', 'Writing basic algorithms in pseudo-codes. Searching and Sorting algorithms. Best, worst and average case analysis of basic algorithms. Asymptotics. Modelling running times as recurrence equations. Solving recurrence equations. Recursive algorithms.Graphs, their representation and algorithms. Design techniques: Divide and conquer with examples. Laboratory exercises in an appropriate language.', 'Required', 3),
 ('CSC 242', '200', 'Foundations Of Computer Science', 'Logic: Propositional and Predicate logic. Loops and Recursion. Loop invariants. Mathematical induction. Proving programmes correct through loop invariants. Hoare''s axioms for Programme correctness. Sets and Lists as data structures. Graphs and graphs algorithms. Discrete probability. Randomised algorithms. Introduction to cryptography. Laboratory exercises in Java.', 'Required', 3),
 ('CSC 272', '200', 'Information Management Systems', 'The use of office applications such as word processors, spreadsheets, database management systems. Scientific document preparation and publishing. Laboratory exercises using appropriate packages such as Latex, Crystal Report', 'Required', 3),
 ('CSC 293', '200', 'Web Programming', 'Introduction to the Hyper Text Mark-up Language (HTML). Web pages. Introduction to Php programming. Forms and Backend scripting using Php. Mysql connection. Introduction to web services. Laboratory exercises in using appropriate technology like Ajax, PHP, Javascrip, DOM.', 'Compulsory', 3),
 ('CSC 299', '200', 'Induustrial Training 1', 'A three month Industrial Training Course expected to hold during the break', 'Required', 2),
 ('CSC 301', '300', 'Computer Centre Management', 'Planning. Proposal writing. Project Costing. Monitoring and Reviews. Personnel Selection and Evaluation. Report Writing. Milestones and Deliverables. Project Scheduling: Bar Charts, Gantt Charts and activity networks. Risk management Issues.', 'Required', 3),
 ('CSC 302', '300', 'Systems Analysis', 'General systems concept. Information systems as systems. The Players in the Information Systems Game. Tools of Modern systems analysis: Data Models: ER diagrams, Process Modelling: Data Flow Diagrams, State-transition diagrams, Design tools, UML Tools. Top down and Bottom up methodologies. Completion of Class projects.', 'Required', 3),
 ('CSC 313', '300', 'Computer Architecture & Organization', 'Organisation and architecture of computer systems hardware, Basic structure of computer hardware and software; Machine characteristics, RISC, CISC; Quantitative Measure of Design Performance MIPS instruction set architectures; Process Design: Data Path and Control Unit; Pipelining Datapath and Control; Pipelining Hazards; Instruction-level Parallelism; Exceptions; Pipeline Hazards; addressing modes; register transfer notation; processor design and computer arithmetic; Memory Subsystems: Caches; Memory Subsystems: Virtual Memory; Input/Output subsystems: Interfacing I/O to CPU; hardware implementations of virtual memory, and input/output control and devices; Server Virtualization and Datacenters. Laboratory Exercises.', 'Required', 4),
 ('CSC 321', '300', 'Computer Operating System', 'History of Operating Systems. Introduction to an Open source operating system. Operating Systems architecture. Kernels and Shells. Commands and Interface. Piping, Redirection and Filters. Shell Programming. Implementation of Operating Shells. Laboratory Exercises.', 'Compulsory', 3),
 ('CSC 322', '300', 'Principles Of Data Communication', 'Foundation. Network Architecture. Inter-networking software. Packet Switching. Inter-networking: Routing. The Internet, Multicast. End to End Protocols. Congestion Control and Resource Allocation. End-to-End Data: Data Compression. Network Security.', 'Compulsory', 2),
 ('CSC 331', '300', 'Programming Principles And Paradigms', 'Programming Principles: History and Evolution of Programming Languages. Syntax of Programming Languages. Semantics of Programming Languages. Procedure Calls and parameter passing. Memory allocation and management. Type systems. Programming paradigms: Object Oriented Programming. Functional Programming. Event-oriented programming. Logic Programming. Laboratory exercises', 'Compulsory', 3),
 ('CSC 334', '300', 'Systems Programming', 'Computer organisation: registers memory and ports. Code, Data and Stack Segments. Assembly language programming: instruction sets. Choices and loops. System stack. Basic input and output systems. Input and output instructions. Laboratory exercises in Assembly language and C. Low level Programming in some high level languages. Processes, threads programming. Signals. Network programming: Network Protocols: IP, TCP, UDP. Client server models. Socket Programming. System calls. Remote Procedure Calls and Remote Method Invocation. Laboratory Exercises.', 'Compulsory', 4),
 ('CSC 335', '300', 'Software Engineering', 'Top-DOWN design, modularity, technical and managerial problem of software development design representatives e.g. pseudo code HIPO diagrams CASE tools and Programming Environments.', 'Compulsory', 4),
 ('CSC 341', '300', 'Data Structures', 'Basic Data Types. Arrays, Records and Pointers. Abstraction. Linear data structures: Stacks, Queues, Linked lists. Nonlinear data structures: Binary Trees, Traversal algorithms. Balanced Binary trees. AVL Trees. Other trees. Graphs and related algorithms. File Organisation. Sequential and Indexed File Organization. Garbage Collection. Hashing.', 'Compulsory', 4),
 ('CSC 351', '300', 'Formal Languages And Automata Theory', 'Formal Models in Computer Science. Automata Theory: Finite State Acceptors and Properties, Push Down Acceptors (PDA) and Properties. Non-determinism. Regular Expressions. Formal Grammars: Regular Grammars, Context Free Grammars. Equivalence between Finite State acceptors and Regular Grammars. Equivalence between Non-Deterministic PDA and Context Free Grammars. Laboratory Exercises.', 'Required', 3),
 ('CSC 381', '300', 'Computer Graphics', 'Mathematics of 3-Ds and Projections. Graphical Data Structures. Basic Computational Geometry. Graphics hardware and software. Laboratory exercises.', 'Elective', 3),
 ('CSC 399', '300', 'Industral Training II', 'A second three month Industrial Training during the break.', 'Required', 2),
 ('CSC 412', '400', 'Microprocessor Interfacing', 'Microprocessor architecture and organisation. Registers. Memory Organization. Handshakes Instruction Sets. Port and Memory addressing. Analog to Digital converters. System Calls. Transducers and Actuators. Laboratory exercises doing real world control of devices using microprocessors. Laboratory exercises', 'Compulsory', 3),
 ('CSC 421', '400', 'Computer Operating Systems II', 'Basic Operating Systems layered architecture. Processor Management. Memory Management. Basic Input and Output Systems. File Systems. Security. Case Studies.', 'Compulsory', 3),
 ('CSC 431', '400', 'Compiling Techniques', 'Architecture of a Compiler. Code-directed Compilation. Lexical Analyser. Syntactic Analyser. Semantic Analyser, Code Generation and Optimization.', 'Required', 3),
 ('CSC 472', '400', 'Database Systems', 'Data models; database and schema design; Basic database architecture. Relational database systems. Relations. Conceptual modelling using ER modelling. Relation Calculus. Relational Algebra. Schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel, and heterogeneous databases; adaptive databases; trigger systems; key-value stores; object-relational mappings; streaming databases; DB as a service. Database query languages. Object Oriented database models.', 'Compulsory', 4),
 ('CSC 475', '400', 'Professional Ethics For Computer Science', 'Introduction to social and professionals issues in Computer Science; Responsibilities of computer scientists as influenced by growth in computer use and networks. Professional and Ethical Responsibilities; Intellectual Property; Piracy, Hacking, Viruses, Liability, Privacy, Crime, and Civil liberties. Professional Ethics ; Software Theft ; Property Rights in Computer Software ; Computers and Privacy; The Invasion of Privacy; Crime, Abuse, and Hacker Ethics; Computer Crime; Hacking and Viruses, Responsibility and Liability, The Social Implications of Computers: Autonomy and Access; Code of Ethics and Professional Conduct of relevant Organisations such as ACM, IEEE • IEEE Code of Ethics', 'Required', 3),
 ('CSC 476', '400', 'Research Methods In Computer Science', 'The objectives and dimensions of research Why Research, What is research, How is research done; Tools of research: Library, The internet, Measurements for Computer Science research, Statistics, Data analysis tools. The research problems: Finding a problem, stating the problem, identifying sub-problems Review of related literature: Why review the literature, Including literature in research proposal. Critique, Survey & Peer review process. Planning the research project: The scientific method, Research planning, Data analysis. Conducting research in computer science. Software and hardware implementation, debugging, and evaluation. Proposal writing / presentation workshop. Research methodology: Quantitative and qualitative approach. Writing the research papers: Characteristics of a paper, Weaknesses of proposals. The Quantitative study. Seminar presentation', 'Required', 3),
 ('CSC 499', '400', 'Industrial Training III', 'A six-month Industrial Training Course expected to hold during the second semester.', 'Required', 5),
 ('CSC 531', '500', 'Human-Computer Interaction', 'The development and scope of HCI. Practical goals. HCI relevant issues in human perception, memory and thinking processes. Approaches to modelling HCI interactions. Design methodologies and notations--levels of interface design. Task analysis, grammars, state charts. Techniques and technologies--dialogue styles, information presentation. The design process--user involvement, iterative design, prototyping. HCI and software engineering. Evaluation--methodologies, formative and summative. Performance and learnability. Specific issues in HCI: the internet; agency; novel interfaces; ubiquitous computing', 'Required', 3),
 ('CSC 532', '500', 'Concurrency: Modelling and Programming', 'Review of Labelled Transition Systems. Introduction to Process Algebra. Hoare''s Communicating Sequential Processes (CSP). Application to modelling Concurrent systems. Translation to State transition systems. Implementations of CSP models in Java. Laboratory Exercises.', 'Elective', 3),
 ('CSC 533', '500', 'Smart and Mobile Applications Development', 'Introduction to Wireless Internet. Wireless Networks(1G, 2G, 2.5G, 3G). Wireless services: servelets, SORCER Services. J2ME/MIDP Programming: Building MIDlets, CLDC, Creating MIDP UIs, Persistent Storage, Connecting to Services, The Game API, Sound and Music, Protecting Network Data. Sample MIDP Application. Laboratory exercises.', 'Elective', 3),
 ('CSC 551', '500', 'Design And Analysis of Algorithms', 'Asymptotic Notation. Recurrence Equations. Basic Algorithms and Analysis. Best, Worst and Average case analysis. Algorithm Design techniques: Divide and Conquer, Dynamic Programming and Greedy Algorithms, Randomized Algorithms. Amortized Analysis. Graph Algorithms. NP-completeness. Approximation algorithms. Laboratory Exercises.', 'Required', 3),
 ('CSC 552', '500', 'Theory of Computation', 'Turing Machines. Universal Turing Machine. Church''s Thesis. Godel''s theorem. Solvable and Unsolvable Problems: The Halting Problem. Decidability: Decidability of Logics and Non-monotonicity. Computational Complexity. Reducibility. NP-Completeness.', 'Required', 3),
 ('CSC 553', '500', 'Fuzzy Logic And Applications', 'Fuzzy Set theory: motivation, possibilistic interpretation, basic concepts, set operations, fuzzy relations, and fuzzy inferences. Fuzzy Sets Applications: Approximate Reasoning, fuzzy arithmetic, decision theory, fuzzy controllers (development, tuning, compilation, deployment), cluster analysis. Hybrid soft computing systems using fuzzy, neural, and evolutionary systems; systems development and case studies. Special Topics: Probabilistic reasoning (Bayesian Belief Networks, Dempster-Shafer), Case-based Reasoning, Evolutionary Multi-Objective Optimisation (EMOO). Laboratory exercises', 'Elective', 3),
 ('CSC 554', '500', 'Semantics Of Programming Languages', 'Abstract machines: RAM and SECD. Operational Semantics. Denotational Semantics. Axiomatic Semantics. Algebraic Semantics. Hoare and His ''Unifying theories of Programming''. Basic Program Analysis and Program Transformation.', 'Required', 3),
 ('CSC 571', '500', 'Constraints Programming', 'Constraint satisfaction problems (CSPs). Domain examples of CSPs. Local Consistency Notions. Constraint Propagation Techniques: Path consistency, arc consistency, hyper-arc consistency, k-consistency etc. Backtracking. Laboratory Exercises using an appropriate programming language.', 'Elective', 3),
 ('CSC 572', '500', 'Machine Learning', 'Basic AI concept of Learning. Learning by example. Learning by analogy. Learning by Induction. Supervised and unsupervised learning. Statistical Learning Techniques: Bayesian Networks. Neural networks. Laboratory Exercises.', 'Required', 3),
 ('CSC 573', '500', 'Logic And Automated Reasoning', 'Review of Propositional Logic. First Order Logic. Model Semantics of First Order Logic. Decidability. Binary Decision Diagrams. Proof Systems: Hilbert''s Proof System. Gentzen''s Natural Deduction Proof System, Sequent Calculus, Resolution, Tableau Proof Techniques. Modal Logic. Kripke semantics for modal logics.', 'Elective', 3),
 ('CSC 574', '500', 'Intelligent Systems', 'This course provides an introduction to Artificial Intelligence. Understanding Natural Languages, Knowledge Representations, Expert Systems, Pattern Recognition. Search with single and multiple agents, Agent Architecture, Markov decision processes, reinforcement learning, and Bayesian state estimation and tracking', 'Compulsory', 3),
 ('CSC 575', '500', 'Special Topics In Computer Science', 'This course provides the opportunity to teach new developments in Computer Science that have not been covered in the curriculum such as exposure to specialised application software for Enterprise Resource Planning, Document and Content Management Systems etc and cutting edge technology.', 'Elective', 3),
 ('CSC 581', '500', 'Image Processing', 'Introduction to color image processing. Image acquisition process. Colour fundamentals. Image degradation models. Image Enhancements: Gray-level transformation, histogram processing. Spatial Filtering. 2D Fourier Transforms. Frequency Domain Smoothening. Morphological Image Processing. Image Compression Standard. Image Segmentation.', 'Elective', 3),
 ('CSC 582', '500', 'Bioinformatics', 'History. Dynamic Programming and Applications to Sequence Alignment. Markov Chains. Hidden Markov Chains. Sequence Driven Problems. Smith Waterman Algorithms and descendants. Pattern discovery in Biological sequences. Multiple sequence alignment and sequence comparison through pattern discovery. Expression and metabolic data. Computational Techniques for Analysis of Metabolic Pathways. Laboratory Exercises in PERL scripting language.', 'Elective', 3),
 ('CSC 583', '500', 'Computer And Information Security', 'Security Risk Assessment, Web/Internet Security, Firewalls, IDS, PKI, email security, filtering tools & techniques , Network Auditing and Forensics, Security Policies, Security Metrics, Database Security, Access Control, Operating System Protection, Security Administration, Legal and ethical issues in security, Non-repudiation, recommender systems, Network Security, Cryptography and steganographic algorithms and techniques, cryptanalysis, Security Protocols, Formal Methods for Verifying Security Policies, electronic mail security, e-mail traces and IP tracking, Web Culturation and Usage Ethics, cyber security , Spamming, Virus Attacks, information hiding and forms of obfuscation. Static and dynamic antispyware methods.', 'Required', 3),
 ('CSC 584', '500', 'ICT For Development', 'A Survey of Developmental issues in ICT. Contextual issues in the application of ICTs in the third world. Design-Reality gaps in the deployment of ICTs. Developmental Informatics. Design methodologies: participatory design, post-colonial computing, artful integration. Technologies discussed: eHealth and eGovernment information infrastructures; geographic information systems; digital archives; information infrastructures, ICT standards. Theoretical concerns: artefacts & politics, how  are inscribed in technologies, engineering mentality, difference between micro- and macro- levels of analysis of technology. The challenges of the Information Society in less-developed regions of the world as well as peripheral areas of more developed countries. The interdisciplinary nature of ICT for development project. Essays will be written by students to demonstrate critical capacity with respect to the empirical illustrations provided during the course', 'Required', 3)

ON CONFLICT (code) DO UPDATE 
    SET code=EXCLUDED.code, 
        level=EXCLUDED.level, 
        title=EXCLUDED.title, 
        description=EXCLUDED.description, 
        status=EXCLUDED.status,
        units=EXCLUDED.units;